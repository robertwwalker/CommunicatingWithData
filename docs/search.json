[
  {
    "objectID": "posts/week-4/index.html",
    "href": "posts/week-4/index.html",
    "title": "Week 4: Beautiful Tables",
    "section": "",
    "text": "Meeting Date: February 6, 2023.\nLast updated: 2023-03-20 16:00:11\nTimezone: America/Los_Angeles"
  },
  {
    "objectID": "posts/week-4/index.html#resources",
    "href": "posts/week-4/index.html#resources",
    "title": "Week 4: Beautiful Tables",
    "section": "Resources",
    "text": "Resources\n\ngtExtras\nthe flextable gallery\nflexpivot\nthe gt cookbook"
  },
  {
    "objectID": "posts/week-4/index.html#model-tables",
    "href": "posts/week-4/index.html#model-tables",
    "title": "Week 4: Beautiful Tables",
    "section": "Model tables",
    "text": "Model tables\nI made a comment in the syllabus that is not quite right. stargazer is indeed nice for producing publication quality tables. But flextable can do this too.\n\n\nCode\nlibrary(flextable); library(tidyverse); library(webshot2)\nModel.Cars <- lm(dist ~ speed, data=cars)\nas_flextable(Model.Cars) %>% theme_vanilla() %>% save_as_image(\"img/RegTable.png\", webshot = \"webshot2\")\n\n\n\n\n\nRegression Table\n\n\nThe base render doesn’t work with the dark theme.\n\nas_flextable(Model.Cars) %>% theme_vader()\n\n\nEstimateStandard Errort valuePr(>|t|)(Intercept)-17.5796.758-2.6010.0123  *speed3.9320.4169.4640.0000***Signif. codes: 0 <= '***' < 0.001 < '**' < 0.01 < '*' < 0.05Residual standard error: 15.38 on 48 degrees of freedomMultiple R-squared: 0.6511, Adjusted R-squared: 0.6438F-statistic: 89.57 on 48 and 1 DF, p-value: 0.0000"
  },
  {
    "objectID": "posts/week-4/index.html#summarizor",
    "href": "posts/week-4/index.html#summarizor",
    "title": "Week 4: Beautiful Tables",
    "section": "Summarizor",
    "text": "Summarizor\n\nuse_df_printer()\nBonds <- read.csv(url(\"https://raw.githubusercontent.com/robertwwalker/DADMStuff/master/BondFunds.csv\"), row.names = 1)\nobj <- summarizor(Bonds, by = \"Risk\", overall_label = \"Overall\")\nobj\n\n\nAbove average(N=59)Average(N=69)Below average(N=56)Overall(N=184)TypeIntermediate Government29 (49.15%)32 (46.38%)26 (46.43%)87 (47.28%)Short Term Corporate30 (50.85%)37 (53.62%)30 (53.57%)97 (52.72%)Missing0 (0.00%)0 (0.00%)0 (0.00%)0 (0.00%)AssetsMean (SD)969.4 (2558.1)965.8 (2432.8)780.8 (1628.0)910.6 (2253.3)Median (IQR)278.4 (537.8)298.1 (557.2)232.4 (440.0)268.4 (508.2)Range12.4 - 16297.117.3 - 18603.517.4 - 7268.112.4 - 18603.5Missing0 (0.00%)0 (0.00%)0 (0.00%)0 (0.00%)FeesNo37 (62.71%)49 (71.01%)44 (78.57%)130 (70.65%)Yes22 (37.29%)20 (28.99%)12 (21.43%)54 (29.35%)Missing0 (0.00%)0 (0.00%)0 (0.00%)0 (0.00%)Expense.RatioMean (SD)0.7 (0.3)0.7 (0.2)0.7 (0.2)0.7 (0.3)Median (IQR)0.7 (0.4)0.7 (0.4)0.7 (0.3)0.7 (0.4)Range0.1 - 1.90.1 - 1.60.3 - 1.10.1 - 1.9Missing0 (0.00%)0 (0.00%)0 (0.00%)0 (0.00%)Return.2009Mean (SD)8.3 (9.2)6.9 (4.4)6.3 (2.7)7.2 (6.1)Median (IQR)7.9 (13.0)6.0 (7.3)6.1 (3.2)6.4 (7.2)Range-8.8 - 32.0-1.1 - 16.40.2 - 13.0-8.8 - 32.0Missing0 (0.00%)0 (0.00%)0 (0.00%)0 (0.00%)X3.Year.ReturnMean (SD)4.2 (3.8)5.0 (1.5)4.8 (1.6)4.7 (2.5)Median (IQR)5.5 (3.5)5.4 (1.5)5.0 (2.2)5.1 (2.0)Range-13.8 - 9.40.4 - 7.3-0.2 - 7.5-13.8 - 9.4Missing0 (0.00%)0 (0.00%)0 (0.00%)0 (0.00%)X5.Year.ReturnMean (SD)3.6 (2.2)4.2 (1.0)4.1 (0.9)4.0 (1.5)Median (IQR)4.3 (2.0)4.4 (1.2)4.1 (1.3)4.3 (1.3)Range-7.3 - 6.81.5 - 6.21.8 - 6.1-7.3 - 6.8Missing0 (0.00%)0 (0.00%)0 (0.00%)0 (0.00%)\n\n\n\nft <- as_flextable(obj, spread_first_col = TRUE, separate_with = \"variable\") \nft %>% theme_vanilla() %>% save_as_image(\"img/SumTable.png\", webshot = \"webshot2\")\n\n\n\n\nSummarizor table\n\n\n\nft\n\n\nAbove average(N=59)Average(N=69)Below average(N=56)Overall(N=184)TypeIntermediate Government29 (49.15%)32 (46.38%)26 (46.43%)87 (47.28%)Short Term Corporate30 (50.85%)37 (53.62%)30 (53.57%)97 (52.72%)Missing0 (0.00%)0 (0.00%)0 (0.00%)0 (0.00%)AssetsMean (SD)969.4 (2558.1)965.8 (2432.8)780.8 (1628.0)910.6 (2253.3)Median (IQR)278.4 (537.8)298.1 (557.2)232.4 (440.0)268.4 (508.2)Range12.4 - 16297.117.3 - 18603.517.4 - 7268.112.4 - 18603.5Missing0 (0.00%)0 (0.00%)0 (0.00%)0 (0.00%)FeesNo37 (62.71%)49 (71.01%)44 (78.57%)130 (70.65%)Yes22 (37.29%)20 (28.99%)12 (21.43%)54 (29.35%)Missing0 (0.00%)0 (0.00%)0 (0.00%)0 (0.00%)Expense.RatioMean (SD)0.7 (0.3)0.7 (0.2)0.7 (0.2)0.7 (0.3)Median (IQR)0.7 (0.4)0.7 (0.4)0.7 (0.3)0.7 (0.4)Range0.1 - 1.90.1 - 1.60.3 - 1.10.1 - 1.9Missing0 (0.00%)0 (0.00%)0 (0.00%)0 (0.00%)Return.2009Mean (SD)8.3 (9.2)6.9 (4.4)6.3 (2.7)7.2 (6.1)Median (IQR)7.9 (13.0)6.0 (7.3)6.1 (3.2)6.4 (7.2)Range-8.8 - 32.0-1.1 - 16.40.2 - 13.0-8.8 - 32.0Missing0 (0.00%)0 (0.00%)0 (0.00%)0 (0.00%)X3.Year.ReturnMean (SD)4.2 (3.8)5.0 (1.5)4.8 (1.6)4.7 (2.5)Median (IQR)5.5 (3.5)5.4 (1.5)5.0 (2.2)5.1 (2.0)Range-13.8 - 9.40.4 - 7.3-0.2 - 7.5-13.8 - 9.4Missing0 (0.00%)0 (0.00%)0 (0.00%)0 (0.00%)X5.Year.ReturnMean (SD)3.6 (2.2)4.2 (1.0)4.1 (0.9)4.0 (1.5)Median (IQR)4.3 (2.0)4.4 (1.2)4.1 (1.3)4.3 (1.3)Range-7.3 - 6.81.5 - 6.21.8 - 6.1-7.3 - 6.8Missing0 (0.00%)0 (0.00%)0 (0.00%)0 (0.00%)"
  },
  {
    "objectID": "posts/week-4/index.html#addendum-the-function",
    "href": "posts/week-4/index.html#addendum-the-function",
    "title": "Week 4: Beautiful Tables",
    "section": "Addendum: the function",
    "text": "Addendum: the function\nBorrowed from Ted Laderas.\n\nlibrary(DT)\nitems <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-05-05/items.csv')\ndatatable(head(items))"
  },
  {
    "objectID": "posts/week-4/index.html#a-clever-function",
    "href": "posts/week-4/index.html#a-clever-function",
    "title": "Week 4: Beautiful Tables",
    "section": "A clever function",
    "text": "A clever function\nTed Laderas [@laderast on Twitter] wrote a function to present the ten most expensive items in a category for the items dataset. You can find his repo for this here.. I will change rows 3 and 9. Line 3 adds the new argument to the function and line 9 carries the variable defined in the argument into top_n.\n\n\n\nTed’s Original\n\nlibrary(ggimage); library(gt)\nlibrary(tidyverse)\nmost_expensive <- function(category_name=NULL, price_category=buy_value){\n  if(!is.null(category_name)){\n    items <- items %>%\n      filter(category == category_name)\n  }\nitems %>% \n  top_n(10, {{price_category}}) %>%\n  arrange(desc({{price_category}})) %>%\n  select(name, sell_value, buy_value, category, image=image_url) %>%\n  gt() %>%\n   text_transform(\n    locations = cells_body(vars(image)),\n    fn = function(x) {\n      web_image(\n        url = x,\n        height = 50\n      )\n    }\n  )\n}\n\n\n\n\n\n\nMy Modification\n\nlibrary(ggimage); library(gt)\nlibrary(tidyverse)\nmost_expensive <- function(category_name=NULL, price_category=buy_value, n=10){\n  if(!is.null(category_name)){\n    items <- items %>%\n      filter(category == category_name)\n  }\nitems %>% \n  top_n(n, {{price_category}}) %>%\n  arrange(desc({{price_category}})) %>%\n  select(name, image=image_url, sell_value, buy_value, category) %>%\n  gt() %>%\n   text_transform(\n    locations = cells_body(vars(image)),\n    fn = function(x) {\n      web_image(\n        url = x,\n        height = 50\n      )\n    }\n  )\n}"
  },
  {
    "objectID": "posts/week-4/index.html#making-a-table",
    "href": "posts/week-4/index.html#making-a-table",
    "title": "Week 4: Beautiful Tables",
    "section": "Making a Table",
    "text": "Making a Table\n\nmost_expensive() %>%  \n  tab_header(title = \"Most Expensive Items in Animal Crossing By Buy Price\") %>%  \n  cols_label(\n    name = \"Item\",\n    sell_value = \"Sale Price\",\n    buy_value = \"Buy Price\",\n    category = \"Item Type\",\n    image = \"Picture\"\n  ) %>%   tab_spanner(\n    label = \"Prices\",\n    columns = c(buy_value, sell_value)\n  )\n\n\n\n\n\n  \n    \n      Most Expensive Items in Animal Crossing By Buy Price\n    \n    \n  \n  \n    \n      Item\n      Picture\n      \n        Prices\n      \n      Item Type\n    \n    \n      Buy Price\n      Sale Price\n    \n  \n  \n    Royal Crown\n\n1200000\n300000\nHats\n    Crown\n\n1000000\n250000\nHats\n    Gold Armor\n\n320000\n80000\nDresses\n    Golden Casket\n\n320000\n80000\nFurniture\n    Grand Piano\n\n260000\n65000\nFurniture\n    Golden Toilet\n\n240000\n60000\nFurniture\n    Blue Steel Staircase\n\n228000\nNA\nFurniture\n    Iron Bridge\n\n228000\nNA\nFurniture\n    Red Steel Staircase\n\n228000\nNA\nFurniture\n    Red Zen Bridge\n\n228000\nNA\nFurniture\n    Zen Bridge\n\n228000\nNA\nFurniture"
  },
  {
    "objectID": "posts/week-4/index.html#the-question",
    "href": "posts/week-4/index.html#the-question",
    "title": "Week 4: Beautiful Tables",
    "section": "The Question",
    "text": "The Question\n\nmost_expensive(\"Hats\") %>%  tab_header(title = \"Most Expensive Items in Animal Crossing By Buy Price\") %>%  cols_label(\n    name = \"Item\",\n    sell_value = \"Sale Price\",\n    buy_value = \"Buy Price\",\n    category = \"Item Type\",\n    image = \"Picture\"\n) %>%   tab_spanner(\n    label = \"Prices\",\n    columns = c(buy_value, sell_value)\n)\n\n\n\n\n\n  \n    \n      Most Expensive Items in Animal Crossing By Buy Price\n    \n    \n  \n  \n    \n      Item\n      Picture\n      \n        Prices\n      \n      Item Type\n    \n    \n      Buy Price\n      Sale Price\n    \n  \n  \n    Royal Crown\n\n1200000\n300000\nHats\n    Crown\n\n1000000\n250000\nHats\n    Gold Helmet\n\n200000\n50000\nHats\n    Blue Rose Crown\n\n48000\n12000\nHats\n    Gold Rose Crown\n\n48000\n12000\nHats\n    Snowperson Head\n\n28000\n7000\nHats\n    Knight's Helmet\n\n15000\n3750\nHats\n    Dark Cosmos Crown\n\n13440\n3360\nHats\n    Chic Rose Crown\n\n11520\n2880\nHats\n    Purple Hyacinth Crown\n\n11520\n2880\nHats\n    Purple Pansy Crown\n\n11520\n2880\nHats\n    Purple Windflower Crown\n\n11520\n2880\nHats\n    Simple Mum Crown\n\n11520\n2880\nHats"
  },
  {
    "objectID": "posts/week-4/index.html#fossils",
    "href": "posts/week-4/index.html#fossils",
    "title": "Week 4: Beautiful Tables",
    "section": "Fossils?",
    "text": "Fossils?\n\nmost_expensive(\"Fossils\", price_category = sell_value, n=65) %>%  tab_header(title = \"Most Expensive Items in Animal Crossing By Buy Price\") %>%  cols_label(\n    name = \"Item\",\n    sell_value = \"Sale Price\",\n    buy_value = \"Buy Price\",\n    category = \"Item Type\",\n    image = \"Picture\"\n) %>%   tab_spanner(\n    label = \"Prices\",\n    columns = c(buy_value, sell_value)\n)\n\n\n\n\n\n  \n    \n      Most Expensive Items in Animal Crossing By Buy Price\n    \n    \n  \n  \n    \n      Item\n      Picture\n      \n        Prices\n      \n      Item Type\n    \n    \n      Buy Price\n      Sale Price\n    \n  \n  \n    Brachio Skull\n\nNA\n6000\nFossils\n    T. Rex Skull\n\nNA\n6000\nFossils\n    Brachio Chest\n\nNA\n5500\nFossils\n    Brachio Tail\n\nNA\n5500\nFossils\n    Dimetrodon Skull\n\nNA\n5500\nFossils\n    Right Megalo Side\n\nNA\n5500\nFossils\n    T. Rex Torso\n\nNA\n5500\nFossils\n    Tricera Skull\n\nNA\n5500\nFossils\n    Brachio Pelvis\n\nNA\n5000\nFossils\n    Dimetrodon Torso\n\nNA\n5000\nFossils\n    Diplo Skull\n\nNA\n5000\nFossils\n    Diplo Tail\n\nNA\n5000\nFossils\n    Left Quetzal Wing\n\nNA\n5000\nFossils\n    Right Quetzal Wing\n\nNA\n5000\nFossils\n    Stego Skull\n\nNA\n5000\nFossils\n    T. Rex Tail\n\nNA\n5000\nFossils\n    Tricera Torso\n\nNA\n5000\nFossils\n    Diplo Neck\n\nNA\n4500\nFossils\n    Diplo Pelvis\n\nNA\n4500\nFossils\n    Left Ptera Wing\n\nNA\n4500\nFossils\n    Megacero Skull\n\nNA\n4500\nFossils\n    Plesio Body\n\nNA\n4500\nFossils\n    Plesio Tail\n\nNA\n4500\nFossils\n    Quetzal Torso\n\nNA\n4500\nFossils\n    Right Ptera Wing\n\nNA\n4500\nFossils\n    Stego Torso\n\nNA\n4500\nFossils\n    Tricera Tail\n\nNA\n4500\nFossils\n    Archelon Skull\n\nNA\n4000\nFossils\n    Diplo Chest\n\nNA\n4000\nFossils\n    Diplo Tail Tip\n\nNA\n4000\nFossils\n    Iguanodon Skull\n\nNA\n4000\nFossils\n    Left Megalo Side\n\nNA\n4000\nFossils\n    Pachy Skull\n\nNA\n4000\nFossils\n    Plesio Skull\n\nNA\n4000\nFossils\n    Ptera Body\n\nNA\n4000\nFossils\n    Spino Skull\n\nNA\n4000\nFossils\n    Stego Tail\n\nNA\n4000\nFossils\n    Ankylo Skull\n\nNA\n3500\nFossils\n    Archelon Tail\n\nNA\n3500\nFossils\n    Dunkleosteus\n\nNA\n3500\nFossils\n    Iguanodon Torso\n\nNA\n3500\nFossils\n    Megacero Torso\n\nNA\n3500\nFossils\n    Pachy Tail\n\nNA\n3500\nFossils\n    Parasaur Skull\n\nNA\n3500\nFossils\n    Ankylo Torso\n\nNA\n3000\nFossils\n    Deinony Torso\n\nNA\n3000\nFossils\n    Iguanodon Tail\n\nNA\n3000\nFossils\n    Mammoth Skull\n\nNA\n3000\nFossils\n    Megacero Tail\n\nNA\n3000\nFossils\n    Parasaur Torso\n\nNA\n3000\nFossils\n    Spino Torso\n\nNA\n3000\nFossils\n    Ankylo Tail\n\nNA\n2500\nFossils\n    Deinony Tail\n\nNA\n2500\nFossils\n    Mammoth Torso\n\nNA\n2500\nFossils\n    Ophthalmo Skull\n\nNA\n2500\nFossils\n    Opthalmo Skull\n\nNA\n2500\nFossils\n    Opthalmo Torso\n\nNA\n2500\nFossils\n    Parasaur Tail\n\nNA\n2500\nFossils\n    Sabertooth Skull\n\nNA\n2500\nFossils\n    Spino Tail\n\nNA\n2500\nFossils\n    Acanthostega\n\nNA\n2000\nFossils\n    Anomalocaris\n\nNA\n2000\nFossils\n    Eusthenopteron\n\nNA\n2000\nFossils\n    Ophthalmo Torso\n\nNA\n2000\nFossils\n    Sabertooth Tail\n\nNA\n2000\nFossils"
  },
  {
    "objectID": "posts/week-3/index.html",
    "href": "posts/week-3/index.html",
    "title": "Week 3: Building a Portfolio, Part II",
    "section": "",
    "text": "Meeting Date: January 30, 2023\nLast updated: 2023-03-20 16:00:19\nTimezone: America/Los_Angeles\n\nClass Plan [Not Necessarily Chronological]\n\nAMA\nQuarto Things\nEssential Differences between Quarto and RMarkdown\nAdding to a Portfolio with Quarto, Distil, or Blogdown\n\nSlides: Week 3 Slides\n\n\nReadings:\n\nQuarto Documentation [if not already done]\n\nLinks I will work from:\nMy Blog My Quarto site on Github pages\n\n\nHomework\nThe third assignment has a group component and an individual component.\n\nYou are to expand your portfolio with at least two pieces of analysis. What analysis? Bits of data visualization or modelling. One should be inspired by a tidyTuesday data visualization, with appropriate citation, and must expand, extend, or in some substantive way deviate from the original.\nYou should also pick a partner and share commentary on improving the aesthetic and the pitch of your existing quarto website. There is a thread on discord called #awesome-quarto that contains information extending the quarto documentation that you should have read last time. I would strongly encourage you to check it out.\n\nThere is also manual reading. The class next time will focus on tables. Here is the selection from the syllabus.\n\n\n\nSyllabus Module for Week 4\n\n\nDeliverable: an email containing the URLs for the two posts and at least one example of constructive commentary on your partner’s portfolio including their name."
  },
  {
    "objectID": "posts/week-2/index.html",
    "href": "posts/week-2/index.html",
    "title": "Week 2: Building a Portfolio, Part I",
    "section": "",
    "text": "Meeting Date: January 23, 2023"
  },
  {
    "objectID": "posts/week-2/index.html#key-tips",
    "href": "posts/week-2/index.html#key-tips",
    "title": "Week 2: Building a Portfolio, Part I",
    "section": "Key Tips",
    "text": "Key Tips\n\nThinking through .gitignore\n\nThe usethis package and usethis::git_vaccinate()\n\nPrimary data security through adding data/ to .gitignore."
  },
  {
    "objectID": "posts/week-2/index.html#two-supplemental-topics",
    "href": "posts/week-2/index.html#two-supplemental-topics",
    "title": "Week 2: Building a Portfolio, Part I",
    "section": "Two supplemental topics:",
    "text": "Two supplemental topics:\n\nHow to Read R Help\nRMarkdown Driven Development"
  },
  {
    "objectID": "posts/week-5/index.html",
    "href": "posts/week-5/index.html",
    "title": "Week 5: Interactive Visuals",
    "section": "",
    "text": "Meeting Date: February 13, 2023.\nLast updated: 2023-03-20 16:00:21\nTimezone: America/Los_Angeles"
  },
  {
    "objectID": "posts/week-5/index.html#resources",
    "href": "posts/week-5/index.html#resources",
    "title": "Week 5: Interactive Visuals",
    "section": "Resources",
    "text": "Resources\n\nTables\n\ngtExtras\nthe flextable gallery\nflexpivot\nthe gt cookbook\n\n\n\nInteractive Graphics\n\nJavascript for R\nThe ggiraph book\nPlotly for R\nr2d3: R Interface for D3\nnetworkD3"
  },
  {
    "objectID": "posts/week-5/index.html#the-data",
    "href": "posts/week-5/index.html#the-data",
    "title": "Week 5: Interactive Visuals",
    "section": "The Data",
    "text": "The Data\n\n\nCode\nlibrary(tidyverse)\nlibrary(jsonlite)\nURL <- paste0(\"https://cdn.rawgit.com/christophergandrud/networkD3/\",\"master/JSONdata/energy.json\")\nEnergy <- fromJSON(URL)\nLinks <- Energy$links \npivot_wider(Links, id_cols=source, names_from = target, values_from = value) %>% knitr::kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsource\n1\n2\n3\n4\n5\n9\n12\n13\n14\n16\n17\n18\n19\n20\n21\n22\n24\n26\n15\n28\n30\n31\n32\n33\n37\n42\n41\n11\n\n\n\n\n0\n124.729\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n1\nNA\n0.597\n26.862\n280.322\n81.144\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n6\nNA\n35.000\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n7\nNA\nNA\nNA\n35.000\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n8\nNA\nNA\nNA\nNA\nNA\n11.606\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n10\nNA\nNA\nNA\nNA\nNA\n63.965\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n9\nNA\nNA\nNA\n75.571\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n11\nNA\nNA\nNA\nNA\nNA\nNA\n10.639\n22.505\n46.184\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n15\nNA\nNA\n56.691\nNA\nNA\nNA\n342.165\n40.858\n113.726\n104.453\n27.14\n37.797\n4.412\n7.863\n90.008\n93.494\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n23\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n40.719\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n25\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n82.233\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n5\nNA\nNA\n1.401\nNA\nNA\nNA\n48.580\n0.129\nNA\nNA\nNA\nNA\n2.096\nNA\nNA\nNA\nNA\n151.891\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n27\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n7.013\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n17\nNA\nNA\n6.242\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n20.897\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n28\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n20.897\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n29\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n6.995\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n2\nNA\nNA\nNA\nNA\nNA\nNA\n121.066\nNA\nNA\nNA\nNA\n135.835\n3.640\n4.413\nNA\nNA\nNA\nNA\nNA\nNA\n128.69\n14.458\n206.267\n33.218\nNA\nNA\nNA\nNA\n\n\n34\n4.375\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n24\nNA\nNA\nNA\nNA\n122.952\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n35\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n839.978\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n36\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n504.287\nNA\nNA\nNA\n\n\n38\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n107.703\nNA\nNA\nNA\n\n\n37\nNA\n611.990\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n39\n77.810\nNA\nNA\n56.587\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n40\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n70.672\n193.026\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n41\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n59.901\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n42\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n19.263\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n43\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n19.263\n59.901\nNA\n\n\n4\nNA\nNA\nNA\nNA\nNA\nNA\n46.477\nNA\nNA\nNA\nNA\nNA\n0.882\nNA\nNA\nNA\nNA\n400.120\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n26\nNA\nNA\n787.129\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n525.531\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n79.329\n\n\n44\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n9.452\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n45\n182.010\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n46\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n19.013\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n47\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n289.366\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA"
  },
  {
    "objectID": "posts/week-5/index.html#the-plot",
    "href": "posts/week-5/index.html#the-plot",
    "title": "Week 5: Interactive Visuals",
    "section": "The Plot",
    "text": "The Plot\n\n\nCode\nlibrary(networkD3)\n# Plot\nsankeyNetwork(Links = Energy$links, \n              Nodes = Energy$nodes, \n              Source = \"source\",\n              Target = \"target\", \n              Value = \"value\", \n              NodeID = \"name\",\n              units = \"TWh\", \n              fontSize = 12, \n              nodeWidth = 30)"
  },
  {
    "objectID": "posts/week-5/index.html#the-plotly-package",
    "href": "posts/week-5/index.html#the-plotly-package",
    "title": "Week 5: Interactive Visuals",
    "section": "The plotly package",
    "text": "The plotly package\nplotly as a package has far more it can do.\n\n\nCode\nlibrary(plotly); library(magrittr)\nlibrary(tidyquant)\n# Use tidyquant to get the data\nINTC <- tq_get(\"INTC\")\n# Slice off the most recent 90 days\nINTC.tail.90 <- tail(INTC, 90)\nINTC.tail <- INTC.tail.90\n# Create a counter of days\nINTC.tail$ID <- seq.int(nrow(INTC.tail))\n# Round the prices to 2 digits\nINTC.tail %<>% mutate(close = round(close, digits=2))\n\n\nNow we want a function to create the dataset for each stage of the animation. There are a few ways to do this but most involve writing a function to create them. This example function comes from the plotly documents.\n\n\nCode\n# This is in the example for plotly paths\n# First a supporting function: getLevels takes input x\ngetLevels <- function (x) {\n  # if x is a factor\n    if (is.factor(x)) \n  # grab the levels of x\n        levels(x)\n  # if x is not a factor, sort unique values of x\n    else sort(unique(x))\n}\n# Two inputs, the data and the variable to form the splits along the x-axis\naccumulate_by <- function(dat, var) {\n  # This handles linking variables to their environment\n  var <- lazyeval::f_eval(var, dat)\n  # get the levels of the given variable using the function above\n  lvls <- getLevels(var)\n  # use lapply, tidy would use map to iterate over the levels in `lvls` and column bind the data with frame denotes by lvls[[x]]\n  dats <- lapply(seq_along(lvls), function(x) {\n   cbind(dat[var %in% lvls[seq(1, x)], ], frame = lvls[[x]])\n  })\n  # bind the rows together\n  dplyr::bind_rows(dats)\n}\n# Invoke the function on our ID variable\nINTC.tail <- INTC.tail %>% accumulate_by(~ID)\n# Create a figure of ID and close for each frame value using plotly's version of a line plot: type:scatter-mode:lines\n# The rest is standard plotly\nfig <- INTC.tail %>% plot_ly(\n  x = ~ID, \n  y = ~close, \n  frame = ~frame,\n  type = 'scatter', \n  mode = 'lines', \n  # This is short for fill to zero on the y-axis\n  fill = 'tozeroy',\n  fillcolor='rgba(73, 26, 201, 0.5)',\n  line = list(color = 'rgb(73, 26, 201)'),\n  text = ~paste(\"Date: \", date, \"<br>Close: $\", close), \n  hoverinfo = 'text'\n)\n# Add the layout; one title and two axes\n# I also mess with the margin to keep the figure from being cut off.\nfig <- fig %>% layout(\n  title =\"Intel Stock Closing Price: Last 90 Days\",\n  yaxis = list(\n    title = \"Close\", \n    range = c(0,50), \n    zeroline = F,\n    tickprefix = \"$\"\n  ),\n  xaxis = list(\n    title = \"Day\", \n    range = c(0,90), \n    zeroline = F, \n    showgrid = F\n  ),\n  margin = list(t=120) # adjust the plot margin to avoid cutting off letters\n) \n# Animate the figure with 100 frames\nfig <- fig %>% animation_opts(\n  frame = 100, # transition time 100 ms\n  transition = 0, # duration of smooth transition in ms\n  redraw = FALSE # redraw the plot at each transition?\n)\nfig <- fig %>% animation_slider(\n  currentvalue = list(\n    prefix = \"Day \"\n  )\n)\nfig\n\n\n\n\n\n\n\nAn easier plotly for these data because they are OHLC\nA link to a stand-alone document with all the data.\n\n\nCode\n# basic example of ohlc charts\n# custom colors\ni <- list(line = list(color = '#000000')) # black\nd <- list(line = list(color = '#FF0000')) # red\n# Create the figure\nfig.2 <- INTC.tail.90 %>%\n  plot_ly(x = ~date, type=\"ohlc\",\n          open = ~open, close = ~close,\n          high = ~high, low = ~low,\n          increasing = i, decreasing = d)\nfig.2"
  },
  {
    "objectID": "posts/week-5/index.html#pizza-ratings",
    "href": "posts/week-5/index.html#pizza-ratings",
    "title": "Week 5: Interactive Visuals",
    "section": "Pizza Ratings",
    "text": "Pizza Ratings\nA #tidyTuesday on pizza shop ratings data. The data come from a variety of sources; it is price, ratings, and similar data for pizza restaurants. The actual contents vary depending on the data source. I will begin by loading the data and summarizing what data seem to be available so that we can figure out what we can do with it. Let’s see what we have; NB: there are three datasets, I chose one.\n\n\nCode\npizza_datafiniti <- readr::read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-10-01/pizza_datafiniti.csv\")\n\n\n\n\nCode\nsummary(pizza_datafiniti)\n\n\n     name             address              city             country         \n Length:10000       Length:10000       Length:10000       Length:10000      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n   province            latitude       longitude        categories       \n Length:10000       Min.   :21.42   Min.   :-157.80   Length:10000      \n Class :character   1st Qu.:34.42   1st Qu.:-104.80   Class :character  \n Mode  :character   Median :40.12   Median : -82.91   Mode  :character  \n                    Mean   :38.37   Mean   : -90.06                     \n                    3rd Qu.:40.91   3rd Qu.: -75.19                     \n                    Max.   :64.85   Max.   : -71.95                     \n price_range_min  price_range_max\n Min.   : 0.000   Min.   : 7.00  \n 1st Qu.: 0.000   1st Qu.:25.00  \n Median : 0.000   Median :25.00  \n Mean   : 4.655   Mean   :27.76  \n 3rd Qu.: 0.000   3rd Qu.:25.00  \n Max.   :50.000   Max.   :55.00  \n\n\nI will use this data; it contains some Oregon pizzarias.\n\n\nCode\npizza_datafiniti %>% filter(province==\"OR\")\n\n\n# A tibble: 122 × 10\n   name    address city  country provi…¹ latit…² longi…³ categ…⁴ price…⁵ price…⁶\n   <chr>   <chr>   <chr> <chr>   <chr>     <dbl>   <dbl> <chr>     <dbl>   <dbl>\n 1 Coburg… 1710 C… Spri… US      OR         44.1   -123. Restau…       0      25\n 2 Coburg… 1710 C… Spri… US      OR         44.1   -123. Restau…       0      25\n 3 Coburg… 1710 C… Spri… US      OR         44.1   -123. Restau…       0      25\n 4 Coburg… 1710 C… Spri… US      OR         44.1   -123. Restau…       0      25\n 5 Coburg… 1710 C… Spri… US      OR         44.1   -123. Restau…       0      25\n 6 Coburg… 1710 C… Spri… US      OR         44.1   -123. Restau…       0      25\n 7 Coburg… 1710 C… Spri… US      OR         44.1   -123. Restau…       0      25\n 8 Coburg… 1710 C… Spri… US      OR         44.1   -123. Restau…       0      25\n 9 Coburg… 1710 C… Spri… US      OR         44.1   -123. Restau…       0      25\n10 Coburg… 1710 C… Spri… US      OR         44.1   -123. Restau…       0      25\n# … with 112 more rows, and abbreviated variable names ¹​province, ²​latitude,\n#   ³​longitude, ⁴​categories, ⁵​price_range_min, ⁶​price_range_max\n\n\nFor the first plot, let me show what is going on in Oregon.\n\n\nCode\npizzaData <- pizza_datafiniti %>% \n  filter(province==\"OR\") %>% \n  group_by(name) %>% \n  mutate(Tcount = n(), \n         PriceAvg = mean(price_range_max - price_range_min)) %>% \n  ungroup()\np <- pizzaData %>% ggplot(.) +\n  aes(x=reorder(name,PriceAvg), \n      fill=PriceAvg) + \n  geom_bar() + \n  coord_flip() + \n  labs(x=\"Pizza Restaurant\", \n       y=\"Count\", \n       title=\"Oregon Pizzerias\", \n       caption = \"data from #tidyTuesday; sorted by Average Price\")\np\n\n\n\n\n\nNow I want a map.\n\n\nCode\npizzaData$group <- 44\nstates <- map_data(\"state\")\nOR.df <- subset(states, region == \"oregon\")\nOR_base <- ggplot(data = OR.df, mapping = aes(x = long, y = lat, group = group)) +\ngeom_polygon(color = \"black\", fill = \"gray\") + labs(title=\"Oregon Pizzerias\")\nOR_base\n\n\n\n\n\n\n\nCode\nOR.Pizza <- OR_base + geom_point(data = pizzaData, aes(y=latitude, x=longitude, group=group), color = \"red\")\nOR.Pizza\n\n\n\n\n\nCombine them into one picture\n\n\nCode\ngrid.arrange(p,OR.Pizza, ncol=2)\n\n\n\n\n\nNow to use a girafe to put this together interactively.\n\n\nCode\ntheme_set(theme_minimal())\npizzaData <- pizzaData %>% mutate(name = str_remove(name, \"['``]\"))\n# Build the barplot\ngg1 <- ggplot(pizzaData, aes(x=reorder(name,PriceAvg), fill=PriceAvg)) +\n  geom_bar_interactive(aes(x = name, tooltip = name, data_id = name))  + \n  coord_flip() + scale_fill_viridis_c() + theme(axis.text=element_text(size=8)) +\n  labs(x=\"Pizza Restaurant\", y=\"Count\", caption = \"data from #tidyTuesday\", sub=\"sorted by Average Price\") \n# Build the map\ngg2 <- ggplot(data = OR.df, mapping = aes(x = long, y = lat, group = group)) +\n  geom_polygon(fill=gray(0.95)) + \n  geom_text_interactive(data = pizzaData, aes(y=latitude, x=longitude, label=emoji('pizza'), tooltip = name, data_id = name), family='EmojiOne', size=2, color=\"orange\") + \n  scale_color_viridis_c(guide=FALSE) +\n  theme_nothing()\n# Bind them together with girafe\na <- girafe( code = print(gg1 / gg2 + plot_annotation(title=\"Pizza in Oregon\")))\nlibrary(widgetframe)\nframeWidget(a, width = \"100%\", height = \"100%\")\n\n\n\n\n\n\nThe formatting of this is quite off. For some reason, the frame doesn’t control scroll and overplots."
  },
  {
    "objectID": "posts/week-5/index.html#a-clever-function",
    "href": "posts/week-5/index.html#a-clever-function",
    "title": "Week 5: Interactive Visuals",
    "section": "A clever function",
    "text": "A clever function\nTed Laderas [@laderast on Twitter] wrote a function to present the ten most expensive items in a category for the items dataset. You can find his repo for this here.. I will change rows 3 and 9. Line 3 adds the new argument to the function and line 9 carries the variable defined in the argument into top_n.\n\n\n\nTed’s Original\n\n\nCode\nlibrary(ggimage); library(gt)\nlibrary(tidyverse)\nmost_expensive <- function(category_name=NULL, price_category=buy_value){\n  if(!is.null(category_name)){\n    items <- items %>%\n      filter(category == category_name)\n  }\nitems %>% \n  top_n(10, {{price_category}}) %>%\n  arrange(desc({{price_category}})) %>%\n  select(name, sell_value, buy_value, category, image=image_url) %>%\n  gt() %>%\n   text_transform(\n    locations = cells_body(vars(image)),\n    fn = function(x) {\n      web_image(\n        url = x,\n        height = 50\n      )\n    }\n  )\n}\n\n\n\n\n\n\n\nMy Modification\n\n\nCode\nlibrary(ggimage); library(gt)\nlibrary(tidyverse)\nmost_expensive <- function(category_name=NULL, price_category=buy_value, n=10){\n  if(!is.null(category_name)){\n    items <- items %>%\n      filter(category == category_name)\n  }\nitems %>% \n  top_n(n, {{price_category}}) %>%\n  arrange(desc({{price_category}})) %>%\n  select(name, image=image_url, sell_value, buy_value, category) %>%\n  gt() %>%\n   text_transform(\n    locations = cells_body(vars(image)),\n    fn = function(x) {\n      web_image(\n        url = x,\n        height = 50\n      )\n    }\n  )\n}"
  },
  {
    "objectID": "posts/week-5/index.html#making-a-table",
    "href": "posts/week-5/index.html#making-a-table",
    "title": "Week 5: Interactive Visuals",
    "section": "Making a Table",
    "text": "Making a Table\n\n\nCode\nmost_expensive() %>%  \n  tab_header(title = \"Most Expensive Items in Animal Crossing By Buy Price\") %>%  \n  cols_label(\n    name = \"Item\",\n    sell_value = \"Sale Price\",\n    buy_value = \"Buy Price\",\n    category = \"Item Type\",\n    image = \"Picture\"\n  ) %>%   tab_spanner(\n    label = \"Prices\",\n    columns = c(buy_value, sell_value)\n  )\n\n\n\n\n\n\n  \n    \n      Most Expensive Items in Animal Crossing By Buy Price\n    \n    \n  \n  \n    \n      Item\n      Picture\n      \n        Prices\n      \n      Item Type\n    \n    \n      Buy Price\n      Sale Price\n    \n  \n  \n    Royal Crown\n\n1200000\n300000\nHats\n    Crown\n\n1000000\n250000\nHats\n    Gold Armor\n\n320000\n80000\nDresses\n    Golden Casket\n\n320000\n80000\nFurniture\n    Grand Piano\n\n260000\n65000\nFurniture\n    Golden Toilet\n\n240000\n60000\nFurniture\n    Blue Steel Staircase\n\n228000\nNA\nFurniture\n    Iron Bridge\n\n228000\nNA\nFurniture\n    Red Steel Staircase\n\n228000\nNA\nFurniture\n    Red Zen Bridge\n\n228000\nNA\nFurniture\n    Zen Bridge\n\n228000\nNA\nFurniture"
  },
  {
    "objectID": "posts/week-5/index.html#the-question",
    "href": "posts/week-5/index.html#the-question",
    "title": "Week 5: Interactive Visuals",
    "section": "The Question",
    "text": "The Question\n\n\nCode\nmost_expensive(\"Hats\") %>%  tab_header(title = \"Most Expensive Items in Animal Crossing By Buy Price\") %>%  cols_label(\n    name = \"Item\",\n    sell_value = \"Sale Price\",\n    buy_value = \"Buy Price\",\n    category = \"Item Type\",\n    image = \"Picture\"\n) %>%   tab_spanner(\n    label = \"Prices\",\n    columns = c(buy_value, sell_value)\n)\n\n\n\n\n\n\n  \n    \n      Most Expensive Items in Animal Crossing By Buy Price\n    \n    \n  \n  \n    \n      Item\n      Picture\n      \n        Prices\n      \n      Item Type\n    \n    \n      Buy Price\n      Sale Price\n    \n  \n  \n    Royal Crown\n\n1200000\n300000\nHats\n    Crown\n\n1000000\n250000\nHats\n    Gold Helmet\n\n200000\n50000\nHats\n    Blue Rose Crown\n\n48000\n12000\nHats\n    Gold Rose Crown\n\n48000\n12000\nHats\n    Snowperson Head\n\n28000\n7000\nHats\n    Knight's Helmet\n\n15000\n3750\nHats\n    Dark Cosmos Crown\n\n13440\n3360\nHats\n    Chic Rose Crown\n\n11520\n2880\nHats\n    Purple Hyacinth Crown\n\n11520\n2880\nHats\n    Purple Pansy Crown\n\n11520\n2880\nHats\n    Purple Windflower Crown\n\n11520\n2880\nHats\n    Simple Mum Crown\n\n11520\n2880\nHats"
  },
  {
    "objectID": "posts/week-5/index.html#fossils",
    "href": "posts/week-5/index.html#fossils",
    "title": "Week 5: Interactive Visuals",
    "section": "Fossils?",
    "text": "Fossils?\n\n\nCode\nmost_expensive(\"Fossils\", price_category = sell_value, n=65) %>%  tab_header(title = \"Most Expensive Items in Animal Crossing By Buy Price\") %>%  cols_label(\n    name = \"Item\",\n    sell_value = \"Sale Price\",\n    buy_value = \"Buy Price\",\n    category = \"Item Type\",\n    image = \"Picture\"\n) %>%   tab_spanner(\n    label = \"Prices\",\n    columns = c(buy_value, sell_value)\n)\n\n\n\n\n\n\n  \n    \n      Most Expensive Items in Animal Crossing By Buy Price\n    \n    \n  \n  \n    \n      Item\n      Picture\n      \n        Prices\n      \n      Item Type\n    \n    \n      Buy Price\n      Sale Price\n    \n  \n  \n    Brachio Skull\n\nNA\n6000\nFossils\n    T. Rex Skull\n\nNA\n6000\nFossils\n    Brachio Chest\n\nNA\n5500\nFossils\n    Brachio Tail\n\nNA\n5500\nFossils\n    Dimetrodon Skull\n\nNA\n5500\nFossils\n    Right Megalo Side\n\nNA\n5500\nFossils\n    T. Rex Torso\n\nNA\n5500\nFossils\n    Tricera Skull\n\nNA\n5500\nFossils\n    Brachio Pelvis\n\nNA\n5000\nFossils\n    Dimetrodon Torso\n\nNA\n5000\nFossils\n    Diplo Skull\n\nNA\n5000\nFossils\n    Diplo Tail\n\nNA\n5000\nFossils\n    Left Quetzal Wing\n\nNA\n5000\nFossils\n    Right Quetzal Wing\n\nNA\n5000\nFossils\n    Stego Skull\n\nNA\n5000\nFossils\n    T. Rex Tail\n\nNA\n5000\nFossils\n    Tricera Torso\n\nNA\n5000\nFossils\n    Diplo Neck\n\nNA\n4500\nFossils\n    Diplo Pelvis\n\nNA\n4500\nFossils\n    Left Ptera Wing\n\nNA\n4500\nFossils\n    Megacero Skull\n\nNA\n4500\nFossils\n    Plesio Body\n\nNA\n4500\nFossils\n    Plesio Tail\n\nNA\n4500\nFossils\n    Quetzal Torso\n\nNA\n4500\nFossils\n    Right Ptera Wing\n\nNA\n4500\nFossils\n    Stego Torso\n\nNA\n4500\nFossils\n    Tricera Tail\n\nNA\n4500\nFossils\n    Archelon Skull\n\nNA\n4000\nFossils\n    Diplo Chest\n\nNA\n4000\nFossils\n    Diplo Tail Tip\n\nNA\n4000\nFossils\n    Iguanodon Skull\n\nNA\n4000\nFossils\n    Left Megalo Side\n\nNA\n4000\nFossils\n    Pachy Skull\n\nNA\n4000\nFossils\n    Plesio Skull\n\nNA\n4000\nFossils\n    Ptera Body\n\nNA\n4000\nFossils\n    Spino Skull\n\nNA\n4000\nFossils\n    Stego Tail\n\nNA\n4000\nFossils\n    Ankylo Skull\n\nNA\n3500\nFossils\n    Archelon Tail\n\nNA\n3500\nFossils\n    Dunkleosteus\n\nNA\n3500\nFossils\n    Iguanodon Torso\n\nNA\n3500\nFossils\n    Megacero Torso\n\nNA\n3500\nFossils\n    Pachy Tail\n\nNA\n3500\nFossils\n    Parasaur Skull\n\nNA\n3500\nFossils\n    Ankylo Torso\n\nNA\n3000\nFossils\n    Deinony Torso\n\nNA\n3000\nFossils\n    Iguanodon Tail\n\nNA\n3000\nFossils\n    Mammoth Skull\n\nNA\n3000\nFossils\n    Megacero Tail\n\nNA\n3000\nFossils\n    Parasaur Torso\n\nNA\n3000\nFossils\n    Spino Torso\n\nNA\n3000\nFossils\n    Ankylo Tail\n\nNA\n2500\nFossils\n    Deinony Tail\n\nNA\n2500\nFossils\n    Mammoth Torso\n\nNA\n2500\nFossils\n    Ophthalmo Skull\n\nNA\n2500\nFossils\n    Opthalmo Skull\n\nNA\n2500\nFossils\n    Opthalmo Torso\n\nNA\n2500\nFossils\n    Parasaur Tail\n\nNA\n2500\nFossils\n    Sabertooth Skull\n\nNA\n2500\nFossils\n    Spino Tail\n\nNA\n2500\nFossils\n    Acanthostega\n\nNA\n2000\nFossils\n    Anomalocaris\n\nNA\n2000\nFossils\n    Eusthenopteron\n\nNA\n2000\nFossils\n    Ophthalmo Torso\n\nNA\n2000\nFossils\n    Sabertooth Tail\n\nNA\n2000\nFossils"
  },
  {
    "objectID": "posts/week-9/index.html",
    "href": "posts/week-9/index.html",
    "title": "Week 9: Shiny",
    "section": "",
    "text": "Meeting Date: March 13, 2023.\nLast updated: 2023-03-20 16:00:32\nTimezone: America/Los_Angeles"
  },
  {
    "objectID": "posts/week-9/index.html#readings",
    "href": "posts/week-9/index.html#readings",
    "title": "Week 9: Shiny",
    "section": "Readings:",
    "text": "Readings:\n\nMastering Shiny and we want chapters 5 through 12."
  },
  {
    "objectID": "posts/week-9/index.html#examples-of-parameterized-markdown",
    "href": "posts/week-9/index.html#examples-of-parameterized-markdown",
    "title": "Week 9: Shiny",
    "section": "Examples of Parameterized Markdown",
    "text": "Examples of Parameterized Markdown\n\nThe Equities and the associated Github repository\nAn Email using gmailr\nExample Document from my Blog"
  },
  {
    "objectID": "posts/week-7/index.html",
    "href": "posts/week-7/index.html",
    "title": "Week 7: Parameterized Markdown",
    "section": "",
    "text": "Meeting Date: February 27, 2023.\nLast updated: 2023-03-20 16:00:34\nTimezone: America/Los_Angeles"
  },
  {
    "objectID": "posts/week-7/index.html#some-examples",
    "href": "posts/week-7/index.html#some-examples",
    "title": "Week 7: Parameterized Markdown",
    "section": "Some Examples",
    "text": "Some Examples\n\nOregon Election Results\nThe Email Bit"
  },
  {
    "objectID": "posts/week-7/index.html#resources",
    "href": "posts/week-7/index.html#resources",
    "title": "Week 7: Parameterized Markdown",
    "section": "Resources",
    "text": "Resources\n\nrevealjs tools\n\n\nQuarto Reference on Presentations\n\nThree Main Types\nThe references in the screenshot above from the syllabus"
  },
  {
    "objectID": "posts/week-7/index.html#on-functions",
    "href": "posts/week-7/index.html#on-functions",
    "title": "Week 7: Parameterized Markdown",
    "section": "On Functions",
    "text": "On Functions\nThe idea of map is a mapping. A function.\nFrom Advanced R\n\n\n\n\nCode\nlibrary(purrr)\ntriple <- function(x) x * 3\nmap(1:3, triple)\n\n\n[[1]]\n[1] 3\n\n[[2]]\n[1] 6\n\n[[3]]\n[1] 9\n\n\n\nmap(LETTERS[1:6], ~paste0(.x, ” is a letter.“, sep=”“))"
  },
  {
    "objectID": "posts/week-7/index.html#parameterized-markdown-for-next-time",
    "href": "posts/week-7/index.html#parameterized-markdown-for-next-time",
    "title": "Week 7: Parameterized Markdown",
    "section": "Parameterized Markdown [for next time]",
    "text": "Parameterized Markdown [for next time]\n\nExample Document from my Blog\nAnother of my use cases: a mail merge\n\n\n\n\nSyllabus cutout"
  },
  {
    "objectID": "posts/week-7/index.html#readings-1",
    "href": "posts/week-7/index.html#readings-1",
    "title": "Week 7: Parameterized Markdown",
    "section": "Readings:",
    "text": "Readings:\n\nMastering Shiny and we want chapters 1 through 4."
  },
  {
    "objectID": "posts/week-7/index.html#examples-of-parameterized-markdown",
    "href": "posts/week-7/index.html#examples-of-parameterized-markdown",
    "title": "Week 7: Parameterized Markdown",
    "section": "Examples of Parameterized Markdown",
    "text": "Examples of Parameterized Markdown\n\nThe Equities and the associated Github repository\nAn Email using gmailr"
  },
  {
    "objectID": "posts/week-6/index.html",
    "href": "posts/week-6/index.html",
    "title": "Week 6: Presentations",
    "section": "",
    "text": "Meeting Date: February 20, 2023.\nLast updated: 2023-03-20 16:00:35\nTimezone: America/Los_Angeles"
  },
  {
    "objectID": "posts/week-6/index.html#resources",
    "href": "posts/week-6/index.html#resources",
    "title": "Week 6: Presentations",
    "section": "Resources",
    "text": "Resources\n\nInteractive Graphics\n\nJavascript for R\nThe ggiraph book\nPlotly for R\nr2d3: R Interface for D3\nnetworkD3\n\n\n\nQuarto Reference on Presentations\n\nThree Main Types\nThe references in the screenshot above from the syllabus\n\n\n\nParameterized Markdown [for next time]\n\nExample Document from my Blog\nAnother of my use cases: a mail merge\n\n\n\n\nSyllabus cutout"
  },
  {
    "objectID": "posts/week-6/index.html#the-plotly-package",
    "href": "posts/week-6/index.html#the-plotly-package",
    "title": "Week 6: Presentations",
    "section": "The plotly package",
    "text": "The plotly package\nplotly as a package has far more it can do.\n\n\nCode\nlibrary(plotly); library(magrittr)\nlibrary(tidyquant)\n# Use tidyquant to get the data\nINTC <- tq_get(\"INTC\")\n# Slice off the most recent 90 days\nINTC.tail.90 <- tail(INTC, 90)\nINTC.tail <- INTC.tail.90\n# Create a counter of days\nINTC.tail$ID <- seq.int(nrow(INTC.tail))\n# Round the prices to 2 digits\nINTC.tail %<>% mutate(close = round(close, digits=2))\n\n\nNow we want a function to create the dataset for each stage of the animation. There are a few ways to do this but most involve writing a function to create them. This example function comes from the plotly documents.\n\n\nCode\n# This is in the example for plotly paths\n# First a supporting function: getLevels takes input x\ngetLevels <- function (x) {\n  # if x is a factor\n    if (is.factor(x)) \n  # grab the levels of x\n        levels(x)\n  # if x is not a factor, sort unique values of x\n    else sort(unique(x))\n}\n# Two inputs, the data and the variable to form the splits along the x-axis\naccumulate_by <- function(dat, var) {\n  # This handles linking variables to their environment\n  var <- lazyeval::f_eval(var, dat)\n  # get the levels of the given variable using the function above\n  lvls <- getLevels(var)\n  # use lapply, tidy would use map to iterate over the levels in `lvls` and column bind the data with frame denotes by lvls[[x]]\n  dats <- lapply(seq_along(lvls), function(x) {\n   cbind(dat[var %in% lvls[seq(1, x)], ], frame = lvls[[x]])\n  })\n  # bind the rows together\n  dplyr::bind_rows(dats)\n}\n# Invoke the function on our ID variable\nINTC.tail <- INTC.tail %>% accumulate_by(~ID)\n# Create a figure of ID and close for each frame value using plotly's version of a line plot: type:scatter-mode:lines\n# The rest is standard plotly\nfig <- INTC.tail %>% plot_ly(\n  x = ~ID, \n  y = ~close, \n  frame = ~frame,\n  type = 'scatter', \n  mode = 'lines', \n  # This is short for fill to zero on the y-axis\n  fill = 'tozeroy',\n  fillcolor='rgba(73, 26, 201, 0.5)',\n  line = list(color = 'rgb(73, 26, 201)'),\n  text = ~paste(\"Date: \", date, \"<br>Close: $\", close), \n  hoverinfo = 'text'\n)\n# Add the layout; one title and two axes\n# I also mess with the margin to keep the figure from being cut off.\nfig <- fig %>% layout(\n  title =\"Intel Stock Closing Price: Last 90 Days\",\n  yaxis = list(\n    title = \"Close\", \n    range = c(0,50), \n    zeroline = F,\n    tickprefix = \"$\"\n  ),\n  xaxis = list(\n    title = \"Day\", \n    range = c(0,90), \n    zeroline = F, \n    showgrid = F\n  ),\n  margin = list(t=120) # adjust the plot margin to avoid cutting off letters\n) \n# Animate the figure with 100 frames\nfig <- fig %>% animation_opts(\n  frame = 100, # transition time 100 ms\n  transition = 0, # duration of smooth transition in ms\n  redraw = FALSE # redraw the plot at each transition?\n)\nfig <- fig %>% animation_slider(\n  currentvalue = list(\n    prefix = \"Day \"\n  )\n)\nfig\n\n\n\n\n\n\n\nAn easier plotly for these data because they are OHLC\nA link to a stand-alone document with all the data.\n\n\nCode\n# basic example of ohlc charts\n# custom colors\ni <- list(line = list(color = '#000000')) # black\nd <- list(line = list(color = '#FF0000')) # red\n# Create the figure\nfig.2 <- INTC.tail.90 %>%\n  plot_ly(x = ~date, type=\"ohlc\",\n          open = ~open, close = ~close,\n          high = ~high, low = ~low,\n          increasing = i, decreasing = d)\nfig.2"
  },
  {
    "objectID": "posts/week-6/index.html#corbyn-was-a-facebook-engagement-machine",
    "href": "posts/week-6/index.html#corbyn-was-a-facebook-engagement-machine",
    "title": "Week 6: Presentations",
    "section": "Corbyn was a Facebook Engagement Machine",
    "text": "Corbyn was a Facebook Engagement Machine\nThe data are a small table.\n\n\nCode\nlibrary(ggrepel)\nlibrary(tidyverse) # call the tidyverse for %>% and ggplot\nlibrary(ggthemes) # Use the economist theme\nlibrary(ggiraph)\nlibrary(DT)\ncorbyn <- readr::read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-04-16/corbyn.csv\")\ndatatable(corbyn)\n\n\n\n\n\n\n\n\nggiraph of barplot and lollipop chart\nI want to plot this in a barplot that is linked with a lollipop chart.\n\n\nCode\np1.Int <- ggplot(corbyn, aes(x=reorder(political_group,avg_facebook_likes), data_id=political_group, y=avg_facebook_likes, label=avg_facebook_likes, tooltip = paste0(political_group,\"<br>\",avg_facebook_likes, sep=\"\"))) + \n  geom_bar_interactive(stat=\"identity\", fill=\"#DC241f\") + \n  geom_label(fill=\"#DC241f\", color=\"#FFFFFF\", size=3.5) +\n  labs(x=\"Associate of the Labour Party\", y=\"Average Facebook Likes\") +\n  hrbrthemes::theme_ipsum_rc() +\n  coord_flip()\np2.Int <- ggplot(corbyn, aes(x=reorder(political_group,avg_facebook_likes), y=avg_facebook_likes, label=avg_facebook_likes, data_id=political_group, tooltip = paste0(political_group,\"<br>\",avg_facebook_likes, sep=\"\"))) + \n  geom_segment_interactive(aes(yend=0, xend=political_group), size=2, color=\"#DC241f\") + \n  geom_point(size=10, color=\"#DC241f\", alpha=0.8) +\n  geom_text(color=\"#FFFFFF\", size=3.5, fontface=2) +\n  labs(x=\"Associate of the Labour Party\", y=\"Average Facebook Likes\") +\n  hrbrthemes::theme_ipsum_rc() +\n  coord_flip()\nlibrary(patchwork)\nGIp1 <- p1.Int / p2.Int\ngirafe(ggobj=GIp1)"
  },
  {
    "objectID": "posts/week-6/index.html#women-in-science",
    "href": "posts/week-6/index.html#women-in-science",
    "title": "Week 6: Presentations",
    "section": "Women in Science",
    "text": "Women in Science\nI had a simple example for last week. Now I want to make it nicer. The data are essentially a table. Let me show it using pivot_wider.\n\n\nCode\nwomen_research <- readr::read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-04-16/women_research.csv\")\nwomen_research\n\n\n\n\n  \n\n\n\nCode\n# There's a spelling error I want to fix, select the rows and columns to fix and reassign the value\nwomen_research[women_research$field==\"Women inventores\",\"field\"] <- \"Women Inventors\" \n# The label for CS/Maths is too long, also\nwomen_research[women_research$field==\"Computer science, maths\",\"field\"] <- \"CS/Math\" \n# Make it wider\nWIR.Wide <- women_research %>% pivot_wider(., id_cols=country, names_from=field, values_from=percent_women)\n# A datatable\ndatatable(WIR.Wide)\n\n\n\n\n\n\n\nCode\nWIR.TTip <- WIR.Wide %>% mutate(text.for.tooltip = paste0(country, \"<br> Health sciences: \", `Health sciences`, \"<br> Physical sciences: \",`Physical sciences`, \"<br> Engineering: \",Engineering,\"<br> CS/Math: \", `CS/Math`, \"<br> Women Inventors: \",`Women Inventors`, sep=\"\")) %>% select(country, text.for.tooltip)\nwomen_research <- women_research %>% left_join(., WIR.TTip)\n\n\n\nAn Interactive plot of Women in Research\n\n\nCode\nlibrary(ggiraph)\nwomen_research <- women_research %>% group_by(country) %>% mutate(Avg.Women.Percent = mean(percent_women)) %>% ungroup()\nwomen_research$PercentWomen <- as.character(round(women_research$percent_women, 3))\np1 <- ggplot(women_research) +\n aes(x = reorder(country,Avg.Women.Percent), fill = country, weight = percent_women, tooltip = text.for.tooltip, data_id = country) +\n geom_bar_interactive() +\n scale_fill_viridis_d(option = \"cividis\") +\n guides(fill=FALSE) +\n coord_flip() +\n theme_minimal() + \n  theme(axis.text.y = element_text(angle = 45, hjust = 1, size=3)) +\n  labs(y = \"Percent of Publications/Patents\", x = \"Country/Group\", fill=\"Country/Grouping\", title = \"Publication and Invention by Women Around the World\", subtitle = \"Percent of Publications or Patents by Women\", caption = \"source: Economist Visualization Errors\") +\n facet_wrap(~field)\nlibrary(patchwork)\nggp1.changed <- ggplot(women_research) +\n aes(x = field, y = reorder(country,Avg.Women.Percent), fill = percent_women, , data_id = country, tooltip=text.for.tooltip) +\n geom_tile_interactive(size = 1L) +\n scale_fill_viridis_c(option=\"cividis\") +\n labs(x = \"Field or Occupation\", y = \"Country\", fill = \"% Women\") +\n theme_minimal(base_size = 10)\nggp1.changed <- ggp1.changed + theme(plot.background = element_rect(colour = \"whitesmoke\"))\ncomb1 <- p1 / ggp1.changed\ngirafe(code = print(comb1))"
  },
  {
    "objectID": "posts/week-6/index.html#a-brief-crosstalk",
    "href": "posts/week-6/index.html#a-brief-crosstalk",
    "title": "Week 6: Presentations",
    "section": "A Brief Crosstalk",
    "text": "A Brief Crosstalk\nGetting this to work wasn’t hard. Getting it to style properly in interaction with the bootstrap frame was a pain. I finally just went with a blank column in two places to make sure that names don’t get cut off.\n\n\nCode\nlibrary(htmltools)\nlibrary(crosstalk)\nlibrary(DT)\nlibrary(d3scatter)\n# Load the data\nBonds <- read.csv(url(\"https://github.com/robertwwalker/DADMStuff/raw/master/BondFunds.csv\"), row.names=1)\n# Turn characters into factors\nBonds <- Bonds %>% mutate(Fees = as.factor(Fees), Risk = as.factor(Risk), Type = as.factor(Type))\n# Create shared data object\nshared_bonds <- SharedData$new(Bonds)\n# Generate the bootsrap columns as three rows, page is 12 wide\nbscols(widths=c(12,12,12),\n  # A d3 visualization\n  d3scatter(shared_bonds, ~Expense.Ratio, ~Return.2009, ~Risk),\n  # The filter checkboxes\n  list(filter_checkbox(\"Fees\", \"Fees\", shared_bonds, ~Fees, inline=TRUE),\n       filter_checkbox(\"Type\", \"Type\", shared_bonds, ~Type, inline=TRUE),\n       filter_checkbox(\"Fees\", \"Risk\", shared_bonds, ~Risk, inline=TRUE)),\n  # The datatable\n  datatable(shared_bonds))\n\n\n\n\n\n\n\n\n\n\n\nFees\n\n\n\nNo\n\n\n\nYes\n\n\n\n\n\nType\n\n\n\nIntermediate Government\n\n\n\nShort Term Corporate\n\n\n\n\n\nRisk\n\n\n\nAbove average\n\n\n\nAverage\n\n\n\nBelow average\n\n\n\n\n\n\n\n\n\n\n\n\n\nWithout the bootstrap formatting of the webpage, it works much better.\n\n\n\nimage\n\n\n\nThe Fix for the cutoff parts\nThe trick to getting this to display properly was a blank column with width=1.\n\n\nCode\nshared_bonds2 <- SharedData$new(Bonds)\n# This was adjusted from above\nbscols(widths=c(12,1,11,1,11),\n  d3scatter(shared_bonds2, ~Expense.Ratio, ~Return.2009, ~Risk),\n  \"\",  # First blank column\n  list(filter_checkbox(\"Fees\", \"Fees\", shared_bonds2, ~Fees, inline=TRUE),\n       filter_checkbox(\"Type\", \"Type\", shared_bonds2, ~Type, inline=TRUE),\n       filter_checkbox(\"Fees\", \"Risk\", shared_bonds2, ~Risk, inline=TRUE)),\n  \"\", # Second blank column\n  datatable(shared_bonds2))\n\n\n\n\n\n\n\n\n\n\n\n\nFees\n\n\n\nNo\n\n\n\nYes\n\n\n\n\n\nType\n\n\n\nIntermediate Government\n\n\n\nShort Term Corporate\n\n\n\n\n\nRisk\n\n\n\nAbove average\n\n\n\nAverage\n\n\n\nBelow average"
  },
  {
    "objectID": "posts/week-1/index.html",
    "href": "posts/week-1/index.html",
    "title": "Week 1: Overview, Empathy and Persuasion, and a Bit of Git",
    "section": "",
    "text": "Updated: January 20, 2023 with a bit on shiny Meeting Date: January 9, 2023\nAttribution for cover graphic: XKCD\nFollowing the presentation of an overview of the general plan for the course and our establishment of familiarity with one another, I will focus on three major topics for today, one leading into our next meeting in two weeks time (January 23, 2023)."
  },
  {
    "objectID": "posts/week-1/index.html#key-tips",
    "href": "posts/week-1/index.html#key-tips",
    "title": "Week 1: Overview, Empathy and Persuasion, and a Bit of Git",
    "section": "Key Tips",
    "text": "Key Tips\n\nThinking through .gitignore\n\nThe usethis package and usethis::git_vaccinate()\n\nPrimary data security through adding data/ to .gitignore."
  },
  {
    "objectID": "posts/week-1/index.html#two-supplemental-topics",
    "href": "posts/week-1/index.html#two-supplemental-topics",
    "title": "Week 1: Overview, Empathy and Persuasion, and a Bit of Git",
    "section": "Two supplemental topics:",
    "text": "Two supplemental topics:\n\nHow to Read R Help\nUseful places for assistance: Stack Overflow, RStudio Forums"
  },
  {
    "objectID": "posts/week-1/index.html#one-key-thing-thats-on-my-mind",
    "href": "posts/week-1/index.html#one-key-thing-thats-on-my-mind",
    "title": "Week 1: Overview, Empathy and Persuasion, and a Bit of Git",
    "section": "One Key Thing That’s on My Mind",
    "text": "One Key Thing That’s on My Mind\n\n\n\nwinston-chang\n\n\nThis is a very nice comparison of the two methods. The shinylive via Github pages really is a neat feature."
  },
  {
    "objectID": "posts/week-10/index.html",
    "href": "posts/week-10/index.html",
    "title": "Week 10: Shiny Part II",
    "section": "",
    "text": "Meeting Date: March 20, 2023.\nLast updated: 2023-03-20 16:00:41\nTimezone: America/Los_Angeles"
  },
  {
    "objectID": "posts/week-10/index.html#readings",
    "href": "posts/week-10/index.html#readings",
    "title": "Week 10: Shiny Part II",
    "section": "Readings:",
    "text": "Readings:\n\nMastering Shiny and we want chapters 1 through 4.\n\nA note on figures…\n\n\nCode\nlibrary(ggplot2)\nggplot(mtcars) + aes(x=mpg, y=hp) + geom_point()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Communicating With Data",
    "section": "",
    "text": "Welcome to the web presence for Communicating with Data.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 10: Shiny Part II\n\n\n\n\n\n\nRobert W. Walker\n\n\nMar 20, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 9: Shiny\n\n\n\n\n\n\nRobert W. Walker\n\n\nMar 13, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 7: Parameterized Markdown\n\n\n\n\n\n\nRobert W. Walker\n\n\nFeb 27, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 6: Presentations\n\n\n\n\n\n\nRobert W. Walker\n\n\nFeb 20, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 5: Interactive Visuals\n\n\n\nR\n\n\n\n\n\n\n\nRobert W. Walker\n\n\nFeb 13, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 4: Beautiful Tables\n\n\n\nR\n\n\n\n\n\n\n\nRobert W. Walker\n\n\nFeb 6, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 3: Building a Portfolio, Part II\n\n\n\nR\n\n\n\n\n\n\n\nRobert W. Walker\n\n\nJan 30, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 2: Building a Portfolio, Part I\n\n\n\nR\n\n\n\n\n\n\n\nRobert W. Walker\n\n\nJan 23, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 1: Overview, Empathy and Persuasion, and a Bit of Git\n\n\n\nR\n\n\n\n\n\n\n\nRobert W. Walker\n\n\nJan 5, 2023\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html#instructor",
    "href": "about.html#instructor",
    "title": "About",
    "section": "Instructor",
    "text": "Instructor\nRobert W. Walker is Associate Professor of Quantitative Methods in the Atkinson Graduate School of Management at Willamette University. He earned a Ph. D. in political science from the University of Rochester in 2005 and has previously held teaching positions at Dartmouth College, Rice University, Texas A&M University, and Washington University in Saint Louis. His current research develops and applies semi-Markov processes to time-series, cross-section data in international relations and international/comparative political economy. He teaches courses in quantitative methods/applied statistics and microeconomic strategy and previously taught four iterations in the U. S. National Science Foundation funded Empirical Implications of Theoretical Models sequence at Washington University in Saint Louis. His work with Curt Signorino and Muhammet Bas was awarded the Miller Prize for the best article in Political Analysis in 2009."
  }
]