---
title: "Week 4: Beautiful Tables"
author: "Robert W. Walker"
date: "2023-02-06"
categories: [R]
image: "image.jpeg"
---

```{r setup1, include=FALSE}
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
```


Meeting Date: February 6, 2023.

Last updated: `r Sys.time()` 

Timezone: `r Sys.timezone()`

![Image Credit: https://www.finewoodworking.com/project-guides/tables-and-desks/table-design](./image.jpeg)

# Class Plan 

1. AMA
2. A Review of Portfolios
3. Good Tables?
4. `gt`
5. `flextable`

# Slides:
[Week 4 Slides](https://robertwwalker.github.io/CWD-Slides/week-4/index.html)

# The Site I am Building

[My github main page](https://robertwwalker.github.io)

# Readings:

- Quarto Documentation [if not already done]
- The `gt` docs [link](https://gt.rstudio.com/)
- The `flextable` [book](https://ardata-fr.github.io/flextable-book/)

## Resources

- [gtExtras](https://jthomasmock.github.io/gtExtras/)
- [the flextable gallery](https://ardata.fr/en/flextable-gallery/)
- [flexpivot](https://dreamrs.github.io/flexpivot/)
- [the gt cookbook](https://themockup.blog/static/resources/gt-cookbook.html)
- 

# Homework

**The fourth assignment consists of adding at two production quality tables to your portfolio.  One in the `gt` or `flextable` style.  One using `DT::datatable`**

![Syllabus Module for Week 4](img/Screen Shot 2023-01-30 at 2.15.58 PM.png)

**Deliverables: an email containing the URLs for the table posts.**

## Model tables

I made a comment in the syllabus that is not quite right.  `stargazer` is indeed nice for producing publication quality tables.  But `flextable` can do this too.

```{r, warning=FALSE, message=FALSE, results='hide'}
#| code-fold: true
library(flextable); library(tidyverse); library(webshot2)
Model.Cars <- lm(dist ~ speed, data=cars)
as_flextable(Model.Cars) %>% theme_vanilla() %>% save_as_image("img/RegTable.png", webshot = "webshot2")
```
![Regression Table](img/RegTable.png)

The base render doesn't work with the **dark** theme.

```{r}
as_flextable(Model.Cars) %>% theme_vader()
```

## Summarizor

```{r}
use_df_printer()
Bonds <- read.csv(url("https://raw.githubusercontent.com/robertwwalker/DADMStuff/master/BondFunds.csv"), row.names = 1)
obj <- summarizor(Bonds, by = "Risk", overall_label = "Overall")
obj
```

```{r, results='hide'}
ft <- as_flextable(obj, spread_first_col = TRUE, separate_with = "variable") 
ft %>% theme_vanilla() %>% save_as_image("img/SumTable.png", webshot = "webshot2")
```


![Summarizor table](img/SumTable.png)

```{r}
ft
```

## Addendum: the function

**Borrowed from Ted Laderas.**

```{r}
library(DT)
items <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-05-05/items.csv')
datatable(head(items))
```

## A clever function

```{r}
library(ggimage); library(gt)
library(tidyverse)
most_expensive <- function(category_name=NULL, price_category=buy_value, n=10){
  
  if(!is.null(category_name)){
    items <- items %>%
      filter(category == category_name)
  }
  items %>% 
  top_n(n, {{price_category}}) %>%
  arrange(desc({{price_category}})) %>%
  select(name, image=image_url, sell_value, buy_value, category) %>%
  gt() %>%
   text_transform(
    locations = cells_body(vars(image)),
    fn = function(x) {
      web_image(
        url = x,
        height = 50
      )
    }
  )
  
}
```

## Making a Table

```{r}
most_expensive() %>%  
  tab_header(title = "Most Expensive Items in Animal Crossing By Buy Price") %>%  
  cols_label(
    name = "Item",
    sell_value = "Sale Price",
    buy_value = "Buy Price",
    category = "Item Type",
    image = "Picture"
  ) %>%   tab_spanner(
    label = "Prices",
    columns = c(buy_value, sell_value)
  )
```

## The Question

```{r}
most_expensive("Hats") %>%  tab_header(title = "Most Expensive Items in Animal Crossing By Buy Price") %>%  cols_label(
    name = "Item",
    sell_value = "Sale Price",
    buy_value = "Buy Price",
    category = "Item Type",
    image = "Picture"
) %>%   tab_spanner(
    label = "Prices",
    columns = c(buy_value, sell_value)
)
```

## Fossils?

```{r}
most_expensive("Fossils", price_category = sell_value, n=65) %>%  tab_header(title = "Most Expensive Items in Animal Crossing By Buy Price") %>%  cols_label(
    name = "Item",
    sell_value = "Sale Price",
    buy_value = "Buy Price",
    category = "Item Type",
    image = "Picture"
) %>%   tab_spanner(
    label = "Prices",
    columns = c(buy_value, sell_value)
)
```

