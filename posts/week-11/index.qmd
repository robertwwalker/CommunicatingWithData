---
title: "Week 11: Shiny Part III"
author: "Robert W. Walker"
date: "2023-04-03"
code-line-numbers: true
image: "image.png"
tags:
  - R
  - shiny
bibliography: "bibliography.bib"
nocite: |
     @*
format: 
   html:
     code-fold: true
     code-copy: hover
     code-block-border-left: true
     df-print: paged
     fig-format: retina
     footnotes-hover: true
     html-math-method: katex
     toc: true
     toc-title: Navigation
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(message=FALSE, warning=FALSE)
```


Meeting Date: April 3, 2023.

Last updated: `r Sys.time()` 

Timezone: `r Sys.timezone()`

# Class Plan 

1. AMA
2. Shiny Overview
3. Shiny, Part III

# Slides:
[Week 11 Slides](https://robertwwalker.github.io/CWD-Slides/week-11/index.html)

<iframe src="https://robertwwalker.github.io/CWD-Slides/week-11/index.html" width="680" height="600" allowfullscreen></iframe>


# Homework

**The ninth assignment is rolled into the creation of a shiny application.**

![Syllabus Module for Week 11](img/Screen Shot 2023-03-13 at 10.25.31 AM.png)

# Unifying it All Together with Shiny

## Working through these chapters

Start with:

```
library(shiny)
library(dplyr)
ui <- ...
server <- ...
shinyApp(ui, server)
```

and the steps will fill in a `ui` and `server`

## Chapter 12

- `tidy` evaluation

![Screen shot](img/Screenshot 2023-04-03 at 10.42.45 AM.png)

- Passing variable names

```
library(shiny)
library(dplyr)
ui <- fluidPage(
  selectInput("var", "Sort by", choices = names(mtcars)),
  checkboxInput("desc", "Descending order?"),
  tableOutput("data")
)
server <- function(input, output, session) {
  sorted <- reactive({
    if (input$desc) {
      arrange(mtcars, desc(.data[[input$var]]))
    } else {
      arrange(mtcars, .data[[input$var]])
    }
  })
  output$data <- renderTable(sorted())
}
shinyApp(ui, server)
```


- The importance of `req`.  **What does it do?**

![Shot of help](img/Screenshot 2023-04-03 at 10.32.53 AM.png)

## Chapter 13

Why reactivity?

![Shot](img/Screenshot 2023-04-03 at 10.48.21 AM.png)

### Playing with Reactive

![Simple Example](img/Screenshot 2023-04-03 at 10.54.50 AM.png)

### Excel is Reactive, That's Why It is Popular

It started with VisiCalc...

![The History](img/Screenshot 2023-04-03 at 10.55.50 AM.png)

## Chapter 14

The reactive graph is worth playing with.  Due to modern defaults in RStudio, the workflow is a bit tricky.  We will have to run the app in the console.

![Settings](img/Screenshot 2023-04-03 at 11.11.10 AM.png)

Run it and close it to get this.

![reactlog](img/Screenshot 2023-04-03 at 11.09.45 AM.png)

## Chapter 15

Reactives, single and plural

![Two types](img/Screenshot 2023-04-03 at 11.14.36 AM.png)
- An oddity

![Behavior is a bit different](img/Screenshot 2023-04-03 at 11.15.54 AM.png)

Pay very close attention to 15.3 on `observe` versus `observeEvent`.  The example in 16.3.3...

```
library(shiny)
reactiveConsole(TRUE)
x <- reactiveVal(1)
y <- observe({
  x()
  observe(print(x()))
})
x(2)
x(3)
x(2)
```

- On Isolate

![Details](img/Screenshot 2023-04-03 at 11.25.20 AM.png)

Isolate is not all that common because the behavior is embedded in two common tools:

![observeEvent and eventReactive](img/Screenshot 2023-04-03 at 11.26.39 AM.png)

15.5 on timing 

![part 1 - invalidateLater](img/Screenshot 2023-04-03 at 11.29.50 AM.png)

![part 2 - Details](img/Screenshot 2023-04-03 at 11.30.36 AM.png)

15.5.2 and the importance of timing.  Using `on.exit`   

## Chapter 16: Escaping the Graph

![Video](img/Screen Recording 2023-04-03 at 11.39.38 AM.mov)

### The Case Studies

![Part 1](img/Screen Recording 2023-04-03 at 11.43.00 AM.mov)

![Part 2](img/Screen Recording 2023-04-03 at 11.44.18 AM.mov)

Two that are related.

![Part 3](img/Screen Recording 2023-04-03 at 11.45.32 AM.mov)

![Part 4](img/Screen Recording 2023-04-03 at 11.46.44 AM.mov)

The timer

![Timer](img/Screen Recording 2023-04-03 at 11.49.42 AM.mov)

### Warnings:  

It is quite easy to get carried away and muddle the flow.

![Anti-patterns](img/Screenshot 2023-04-03 at 11.52.09 AM.png)

## Readings: 

- [Mastering Shiny](https://mastering-shiny.org/) and we want chapters 13 through 16.

# References

```{r}
knitr::write_bib(names(sessionInfo()$otherPkgs), file="bibliography.bib")
```


